{"version":3,"sources":["application/api/index.js","application/reducers/auth.js","application/reducers/data.js","application/index.js","application/middlewares/auth.js","application/actions/data.js","pages/Language/LangReducer.js","pages/Language/LangContext.js","components/Loading.js","utils/cookie.js","application/middlewares/index.js","application/actions/auth.js","App.js","reportWebVitals.js","application/context/ThemeContext.js","index.js"],"names":["axiosInstance","axios","create","baseURL","process","timeout","headers","accept","Authorization","interceptors","response","use","error","originalRequest","config","status","data","get","withCredentials","then","defaults","token","store","dispatch","userLoaded","catch","err","Logout","Promise","reject","api","getApi","a","url","contentType","console","log","updateApi","params","put","postApi","post","deleteApi","delete","uploadPhoto","formData","initialState","isLogged","isLoading","categories","user","reducer","state","action","type","SET_TOKEN","payload","LOGIN_SUCCESS","USER_LOADED","LOGOUT","USER_LOADING","USER_LOAD_FAILED","filters","SET_CATEGORY","SET_FILTER_ID","combineReducers","auth","configureStore","Date","now","logout","toast","LoadUser","userLoading","cookie","loginSuccess","setCategory","langReducer","LangContext","createContext","LangContextProvider","props","useReducer","lang","dispatchLang","Provider","value","children","Loading","className","color","height","width","SetCookie","key","browser","set","expires","fetchData","success","message","setToken","createStaff","updateStaff","setStaffList","updateStaffStatus","deleteStaff","Home","lazy","Arenda","Kommercheskaya","Products","Wishlist","Single","Notice","Profile","AllMap","Auth","Page404","App","useHistory","useDispatch","useEffect","fallback","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeContext","React","ThemeProvider","userPreference","localStorage","window","matchMedia","matches","useState","getItem","theme","setTheme","setItem","useStorageTheme","oldTheme","ref","useRef","current","usePrevious","toggleTheme","useLayoutEffect","document","documentElement","classList","remove","add","useMemo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab12bed2.chunk.js","sourcesContent":["import axios from 'axios';\nimport store from '../index';\nimport {userLoaded} from '../actions/auth';\nimport {Logout} from '../middlewares/auth';\n\n\nconst API_BASE_URL = process.env.REACT_APP_IS_PRODUCTION === 'production' ? process.env.REACT_APP_API_BASE_PRODUCTION_URL : process.env.REACT_APP_API_BASE_URL\n\nconst axiosInstance = axios.create({\n    baseURL: API_BASE_URL,\n    timeout: 10000,\n    headers: {\n        'Content-Type': 'application/json',\n        accept: 'application/json',\n        Authorization:null\n    }\n});\n\naxiosInstance.interceptors.response.use(\n  response => response,\n  (error) => {\n    const originalRequest = error.config;\n    if (error?.response?.status === 401 && error?.response?.data === 'Unauthorized') {\n      const config = {\n        withCredentials: true,\n        //crossDomain: true\n      }\n      return axiosInstance.get('api/auth/token/refresh/', config)\n        .then((response) =>{\n          axiosInstance.defaults.headers.Authorization = `Bearer ${response.data.token}`;\n          originalRequest.headers.Authorization = `Bearer ${response.data.token}`;\n          store.dispatch(userLoaded(response.data));\n          return axiosInstance(originalRequest);\n        }).catch((err) => {\n          axiosInstance.defaults.headers.Authorization = null;\n          originalRequest.headers.Authorization = null;\n          store.dispatch(Logout());\n          //window.location.href = process.env.REACT_APP_API_ADMIN_RELOGIN_URL;\n          return Promise.reject(error);\n      });\n    }else{\n      axiosInstance.defaults.headers.Authorization = null;\n      originalRequest.headers.Authorization = null;\n      //store.dispatch(Logout());\n      return Promise.reject(error);\n    }\n  }\n);\n\n\n\nconst api = {\n    getApi: async ({url, token, withCredentials, contentType}) => {\n      console.log(contentType)\n      // console.log(token)\n      const config = {\n        headers: {\n          'Content-Type': contentType ? contentType : 'application/json',\n          accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        timeout: contentType ? 100000 : 20000,\n        withCredentials: withCredentials\n      }\n      const response = await axiosInstance.get(`/api/${url}`, config);\n      return response;\n    },\n    \n    updateApi:async ({url, token, withCredentials, params}) => {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        withCredentials: withCredentials,\n      }\n      const response = await axiosInstance.put(`/api/${url}`, params, config);\n      return response;\n    },\n    postApi:async ({url, token, withCredentials, params,}) => {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        withCredentials: withCredentials,\n      }\n      const response = await axiosInstance.post(`/api/${url}`, params, config);\n      return response;\n    },\n    deleteApi:async ({url, token, data, withCredentials,}) => {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          accept: 'application/json',\n          Authorization: `Bearer ${token}`,\n        },\n        withCredentials: withCredentials,\n        data:data\n      };\n      const response = await axiosInstance.delete(`/api/${url}`, config);\n      return response;\n    },\n    uploadPhoto:async({url, token, withCredentials, formData}) => {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`\n        },\n        timeout: 50000,\n        withCredentials: withCredentials,\n      };\n      const response = await axiosInstance.post(`/api/${url}`, formData, config);\n      return response;\n    }\n}\n\nexport default api;","import { \n    LOGIN_SUCCESS, LOGOUT, USER_LOADING, USER_LOAD_FAILED, USER_LOADED, SET_TOKEN } from \"../actions/auth\";\n\nconst initialState = {\n    token: \"\",\n    isLogged:false,\n    isLoading:true,\n    categories:{},\n    user:{}\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        // last\n        case SET_TOKEN:\n            return{\n                ...state,\n                token: action.payload,\n            }\n\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                token: action.payload.token,\n                user:action.payload.data,\n                isLoading:false,\n                isLogged:true,\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                ...action.payload,\n                isLogged:true,\n                isLoading:false\n            };\n        case LOGOUT:\n            return{\n                ...state,\n                token: \"\",\n                isLogged:false,\n                isLoading:true,\n                user:{},\n                \n            }\n        case USER_LOADING:\n            return{\n                ...state,\n                isLoading:true\n            }\n        case USER_LOAD_FAILED:\n            return{\n                ...state,\n                token: \"\",\n                isLogged:false,\n                isLoading:false,\n                user:{},\n                \n            }\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import { \r\n    SET_CATEGORY, SET_FILTER_ID\r\n} from \"../actions/data\";\r\n\r\nconst initialState = {\r\n    categories:[],\r\n    filters:{},\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        \r\n        case SET_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories:action.payload.categories\r\n            }\r\n        case SET_FILTER_ID:\r\n                return{\r\n                    ...state,\r\n                    filters:action.payload.filters\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport auth from './reducers/auth';\nimport data from './reducers/data'\n\nconst reducer = combineReducers(\n    {auth, data}\n);\nconst store = configureStore({\n    reducer,\n});\nexport default store;","import { \n    logout, userLoading, userLoadFailed, userLoaded, loginSuccess, createStaff, updateStaff, setStaffList,\n    updateStaffStatus, deleteStaff\n} from \"../actions/auth\";\nimport api from '../api';\nimport toast from 'react-hot-toast';\nimport {GetCookie, SetCookie } from '../../utils/cookie'\nimport cookie from \"js-cookie\";\n\nexport const Logout = () => async dispatch =>{\n    try {\n        await api.getApi({url:`auth/logout/${Date.now()+100}`, token:\"\", withCredentials:true});\n        dispatch(logout());\n    } catch (error) {\n        dispatch(logout());\n        toast.error('Unknown error');\n    }\n}\n\nexport const LoadUser = () => async dispatch => {\n    dispatch(userLoading());\n    // let token = GetCookie();\n    let  token = cookie.get('refresh_token');\n    // console.log(token,\"   send\")\n        const response = await api.getApi({url:'user/load-user', token, withCredentials:true});\n        // dispatch(userLoaded(response.data));\n        // console.log(response);\n        if(response.status == 200){\n            const payload = {\"token\":response.data.token, \"data\":response.data.data}\n            dispatch(loginSuccess(payload));\n            // console.log(\"i have done it\")\n        }\n    \n}\n\n\n\nexport const AdminRegister = ({data, setError, history}) => async dispatch => {\n    try {\n        const response = await api.postApi({url:'auth/staff/login', params:data, withCredentials:true, token:\"\"});\n        SetCookie('refresh_token', response.data.refresh_token);\n        dispatch(loginSuccess(response.data));\n        history.push('/admin/')\n    } catch (error) {\n        if(error?.response){\n            if(error.response.data?.error?.length){\n                error.response.data.error.forEach(({ name, type, message }, index) => {\n                    \n                    setError(name, { type, message });\n                    if(index === 0){\n                        toast.error(message);\n                    }\n                });\n            }else if(error.response.data?.length){\n                error.response.data.forEach(({ name, type, message }, index) => {\n                    console.log(index, name)\n                    \n                    setError(name, { type, message });\n                    if(index === 0){\n                        toast.error(message);\n                    }\n                });\n            }\n            else{\n                console.log(error.response)\n            }\n\n        }\n    }\n};\n\n\n\nexport const GetStaffList = ({token, setLoading}) => async dispatch => {\n    try {\n        const response = await api.getApi({url:'auth/stafflist', withCredentials:false, token});\n        dispatch(setStaffList(response.data));\n        setLoading(false);\n    } catch (error) {\n        setLoading(false);\n        toast.error(\"Ýalňyşlyk çykdy\");\n    }\n};\n\n\n\n\nexport const CreateStaff = ({token, data, setClose, setLoading, setError}) => async dispatch => {\n    try {\n        const response = await api.postApi({url:'auth/staff', params:data, withCredentials:false, token});\n        dispatch(createStaff(response.data));\n        setLoading(false);\n        setClose();\n    } catch (error) {\n        setLoading(false);\n        console.log(error)\n        if(error.response){\n            console.log(error.response.data)\n            if(error.response.data){\n                if(error.response.data.error){\n                    error.response.data.error.forEach(({ name, type, message }) => {\n                        toast.error(message);\n                        setError(name, { type, message })\n                    });\n                }else{\n                    if(error.response.data.length){\n                        error.response.data.forEach(({ name, type, message }) => {\n                            toast.error(message);\n                            setError(name, { type, message })\n                        });\n                    }else{\n                        toast.error(\"Ýalňyşlyk çykdy\");\n                    }\n\n                }\n            }\n\n        }\n\n    }\n};\n\nexport const UpdateStaff = ({token, data, id, setClose, setLoading, setError}) => async dispatch => {\n    try {\n        const response = await api.updateApi({url:`auth/staff/${id}`, params:data, withCredentials:false, token});\n        dispatch(updateStaff(response.data));\n        setClose();\n        setLoading(false);\n    } catch (error) {\n        console.log(error)\n        setLoading(false);\n        if(error.response){\n            console.log(error.response.data)\n            if(error.response.data){\n                if(error.response.data.error){\n                    error.response.data.error.forEach(({ name, type, message }) => {\n                        toast.error(message);\n                        setError(name, { type, message })\n                    });\n                }else{\n                    if(error.response.data.length){\n                        error.response.data.forEach(({ name, type, message }) => {\n                            toast.error(message);\n                            setError(name, { type, message })\n                        });\n                    }else{\n                        toast.error(\"Ýalňyşlyk çykdy\");\n                    }\n                }\n            }\n\n        }\n    }\n};\n\nexport const UpdateStaffStatus = ({token, status, id, setLoading}) => async dispatch => {\n    try {\n        await api.updateApi({url:`auth/staff/${id}/status`, params:{staff_status:status}, withCredentials:false, token});\n        dispatch(updateStaffStatus({id, status}));\n        setLoading(false);\n    } catch (error) {\n        console.log(error)\n        setLoading(false);\n        toast.error(\"Ýalňyşlyk çykdy\");\n    }\n};\n\nexport const DeleteStaff = ({token, id, setLoading}) => async dispatch => {\n    try {\n        await api.deleteApi({url:`auth/staff/${id}`, withCredentials:false, token});\n        dispatch(deleteStaff({id}));\n        setLoading(false);\n    } catch (error) {\n        console.log(error)\n        setLoading(false);\n        toast.error(\"Ýalňyşlyk çykdy\");\n    }\n};\n\n","export const SET_CATEGORY = 'SET_CATEGORY';\r\nexport const setCategory = data =>({\r\n    type: SET_CATEGORY,\r\n    payload: data,\r\n});\r\nexport const SET_FILTER_ID = 'SET_FILTER_ID';\r\nexport const setFilters = data =>({\r\n    type: SET_FILTER_ID,\r\n    payload: data,\r\n});","export const langReducer = (state, action) => {\r\n    switch (action.type) {\r\n    case \"Ru\":\r\n        return \"ru\";\r\n      case \"Tk\":\r\n        return \"tk\";\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import React, { createContext, useReducer } from \"react\";\r\nimport { langReducer } from \"./LangReducer\";\r\nexport const LangContext = createContext();\r\n\r\nconst LangContextProvider = (props) => {\r\n  const [lang, dispatchLang] = useReducer(langReducer, \"ru\");\r\n  return (\r\n    <LangContext.Provider value={{ lang, dispatchLang }}>\r\n      {props.children}\r\n    </LangContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LangContextProvider;\r\n","import Loader from \"react-loader-spinner\";\r\nimport {string} from \"prop-types\";\r\n\r\nconst Loading = ({type}) => (\r\n    <>\r\n        {\r\n        type === \"global\" ?\r\n            <div className=\"z-50 bg-transparent absolute top-0 left-0 w-full h-full flex justify-center items-center\">\r\n                <Loader type=\"Puff\" color=\"#0468ff\" height={80} width={80} />\r\n            </div>\r\n            :\r\n        type === \"table\" ?\r\n            <div className=\"z-50 w-full h-full flex justify-center items-center\">\r\n                <Loader type=\"Oval\" color=\"rgba(99, 102, 241, 1)\" height={80} width={80} />\r\n            </div>\r\n            :\r\n        type === \"button\" ? \r\n            <div className=\"z-50 w-full h-full flex justify-center items-center\">\r\n                <Loader type=\"Bars\" color=\"white\" height={21} width={21} />\r\n            </div>\r\n            :\r\n        type === \"select\" ? \r\n                <div className=\"z-50 w-full h-full flex justify-center items-center\">\r\n                    <Loader type=\"Bars\" color=\"rgba(99, 102, 241, 1)\" height={21} width={21} />\r\n                </div>\r\n            :\r\n            null\r\n        }\r\n    </>\r\n);\r\n\r\nLoading.propTypes = {\r\n    type:string.isRequired\r\n}\r\n\r\nexport default Loading;","import cookie from 'js-cookie';\n\nexport const SetCookie = (key, value) => {\n  if (process.browser) {\n    cookie.set(key, value, {expires: 7});\n  }\n};\nexport const GetCookie = (name) => {\n  if (process.browser) {\n    cookie.get(name);\n  }\n};\nexport const RemoveCookie = (name) => {\n  return cookie.remove(name)\n};","import api from '../api';\r\nimport toast from 'react-hot-toast';\r\nexport const fetchData = ({ url, token, action }) => async dispatch => {\r\n    try {\r\n        const response = await api.getApi({ url, token, withCredentials: false });\r\n        return action({ success: true, data: response.data });\r\n    } catch (error) {\r\n        console.log(error)\r\n        toast.error(\"Üstinlikli Bolmady\");\r\n        return action({ success: false, message: error?.response?.data });\r\n        }\r\n    }\r\n     \r\n    export const post = ({ url, token, action, data }) => async dispatch => {\r\n    try {\r\n    const response = await api.postApi({ url, params: data, withCredentials: false, token });\r\n    return action({ success: true, data: response.data });\r\n    } catch (error) {\r\n    return action({ success: false, message: error?.response });\r\n    }\r\n    }\r\n     \r\n    export const put = ({ url, token, action, data }) => async dispatch => {\r\n    try {\r\n    const response = await api.updateApi({ url, params: data, withCredentials: false, token });\r\n    return action({ success: true, data: response.data });\r\n    } catch (error) {\r\n    return action({ success: false, message: error?.response?.data });\r\n    }\r\n    }\r\n     \r\n    export const deleteData = ({ url, token, action }) => async dispatch => {\r\n    try {\r\n    const response = await api.deleteApi({ url, token, withCredentials: false });\r\n    dispatch(action(response.data));\r\n    } catch (error) {\r\n    console.log(error)\r\n    toast.error(\"Üstinlikli Bolmady\");\r\n    }\r\n    }","\n// last\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const setToken = data =>({\n    type: SET_TOKEN,\n    payload: data,\n});\n\n// last end\n\nexport const LOGOUT = 'LOGOUT';\nexport const logout = () => ({\n    type: LOGOUT\n});\n\nexport const USER_LOADING = 'USER_LOADING';\nexport const userLoading = () => ({\n    type: USER_LOADING\n});\n\nexport const USER_LOAD_FAILED = 'USER_LOAD_FAILED';\nexport const userLoadFailed = () => ({\n    type: USER_LOAD_FAILED\n});\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const userLoaded = (data) => ({\n    type: USER_LOADED,\n    payload:data\n});\n\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const loginSuccess = data => ({\n    type: LOGIN_SUCCESS,\n    payload: data,\n});\n\nexport const CREATE_STAFF = 'CREATE_STAFF';\nexport const createStaff = data =>({\n    type: CREATE_STAFF,\n    payload: data,\n})\n\n\nexport const UPDATE_STAFF = 'UPDATE_STAFF';\nexport const updateStaff = data =>({\n    type: UPDATE_STAFF,\n    payload: data,\n});\n\nexport const SET_STAFF_LIST = 'SET_STAFF_LIST';\nexport const setStaffList = data =>({\n    type: SET_STAFF_LIST,\n    payload: data,\n});\n\nexport const UPDATE_STAFF_STATUS = 'UPDATE_STAFF_STATUS';\nexport const updateStaffStatus = data =>({\n    type: UPDATE_STAFF_STATUS,\n    payload: data,\n});\n\nexport const DELETE_STAFF = 'DELETE_STAFF';\nexport const deleteStaff = data =>({\n    type: DELETE_STAFF,\n    payload: data,\n});\n\n","import { Suspense, lazy, useEffect } from 'react'; //, lazy\nimport { BrowserRouter, Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Loading from './components/Loading';\nimport { Toaster } from 'react-hot-toast';\nimport { LoadUser } from './application/middlewares/auth';\nimport { fetchData } from './application/middlewares';\nimport LangContextProvider from \"./pages/Language/LangContext\";\nimport { useDispatch } from 'react-redux';\n// import { LoadUser } from './application/middlewares/auth';\n\n\nconst Home = lazy(() => import('./pages/home'));\nconst Arenda = lazy(() => import('./pages/Arenda'));\nconst Kommercheskaya = lazy(() => import('./pages/Kommercheskaya'));\nconst Products = lazy(() => import('./pages/Products'));\nconst Wishlist = lazy(() => import('./pages/Wishlist'));\nconst Single = lazy(() => import('./pages/Single'));\nconst Notice = lazy(() => import('./pages/Notice'));\nconst Profile = lazy(() => import('./pages/Profile'));\nconst AllMap = lazy(() => import('./pages/AllMap'));\nconst Auth = lazy(() => import('./pages/Auth/index'));\nconst Page404 = lazy(() => import('./pages/404'));\n// const Home = lazy(() => import('./pages/Home'));\n\n\nfunction App() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    dispatch(LoadUser());\n  },[])\n  // useEffect(() =>{\n  //   dispatch(userLoading());\n  //   fetchData({\n  //     url:'load-user',\n  //     token:'',\n  //     action:(response){\n  //       if(response.success){\n  //         dispatch(userLoaded(response.data));\n  //       } else{\n  //         dispatch(userLoadFailed())\n  //       }\n  //     }\n  //   })\n  // }, [])\n  return (\n      <BrowserRouter>\n        <Suspense fallback={<Loading type=\"global\"/>}>\n        <LangContextProvider>\n          <Switch>\n          <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route path=\"/auth\">\n                <Auth />\n            </Route>\n            <Route path=\"/arenda\">\n              <Arenda />\n            </Route>\n            <Route path=\"/kommercheskaya\">\n              <Kommercheskaya />\n            </Route>\n            <Route path=\"/products\">\n              <Products />\n            </Route>\n            <Route path=\"/wishlist\">\n              <Wishlist />\n            </Route>\n            <Route path=\"/single\">\n              <Single />\n            </Route>\n            <Route path=\"/create_notice\">\n              <Notice />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/AllHomeMap\">\n              <AllMap />\n            </Route>\n            <Route path=\"*\" component={Page404} />\n            \n          </Switch>\n          </LangContextProvider>\n        </Suspense>\n        <Toaster/>\n      </BrowserRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect, useRef, useLayoutEffect, useMemo } from 'react'\n\n/**\n * Saves the old theme for future use\n * @param {string} theme - Name of curent theme\n * @return {string} previousTheme\n */\nfunction usePrevious(theme) {\n  const ref = useRef()\n  useEffect(() => {\n    ref.current = theme\n  })\n  return ref.current\n}\n\n/**\n * Gets user preferences from local storage\n * @param {string} key - localStorage key\n * @return {array} getter and setter for user preferred theme\n */\nfunction useStorageTheme(key) {\n  const userPreference = (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)\n  \n  const [theme, setTheme] = useState(\n    // use stored theme; fallback to user preference\n    localStorage.getItem(key) || userPreference\n  )\n  // update stored theme\n  useEffect(() => {\n    localStorage.setItem(key, theme)\n  }, [theme, key])\n\n  return [theme, setTheme]\n}\n\n// create context\nexport const ThemeContext = React.createContext()\n\n// create context provider\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useStorageTheme('theme')\n\n  // update root element class on theme change\n  const oldTheme = usePrevious(theme)\n  useLayoutEffect(() => {\n    document.documentElement.classList.remove(`${oldTheme}`)\n    document.documentElement.classList.add(`${theme}`)\n  }, [theme, oldTheme])\n\n  function toggleTheme() {\n    if (theme === 'light') setTheme('dark')\n    else setTheme('light')\n  }\n\n  const value = useMemo(\n    () => ({\n      theme,\n      toggleTheme,\n    }),// eslint-disable-next-line\n    [theme]\n  )\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from './reportWebVitals';\nimport store from './application/index';\nimport {ThemeProvider} from './application/context/ThemeContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <Provider store={store}>\n          <App />\n      </Provider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}