{"version":3,"sources":["icons/LocationIcon.js","pages/image/home_icon.svg","../node_modules/react-leaflet/esm/Marker.js","pages/Maps.js"],"names":["LocationIcon","props","baseProfile","viewBox","fill","height","width","d","Marker","createLayerComponent","ctx","position","options","instance","LeafletMarker","context","overlayContainer","marker","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable","Maps","locations","lat","lng","useDispatch","console","log","myIcon","L","iconUrl","logos1","iconSize","iconAnchor","popupAnchor","shadowUrl","shadowSize","shadowAnchor","className","center","zoom","scrollWheelZoom","style","url","attribution","map"],"mappings":"yHAeiBA,IAfjB,SAAsBC,GAClB,OACE,6CACEC,YAAY,OACZC,QAAQ,YACRC,KAAK,eACLC,OAAO,MACPC,MAAM,OACFL,GANN,aAQE,sBAAMM,EAAE,iS,iCCVD,QAA0B,uC,wHCE5BC,EAASC,aAAqB,WAGxCC,GAAK,IAFNC,EAEM,EAFNA,SACGC,EACG,iBACAC,EAAW,IAAIC,SAAcH,EAAUC,GAC7C,MAAO,CACLC,WACAE,QAAS,2BAAKL,GAAP,IACLM,iBAAkBH,QAGrB,SAAsBI,EAAQhB,EAAOiB,GAClCjB,EAAMU,WAAaO,EAAUP,UAC/BM,EAAOE,UAAUlB,EAAMU,UAGP,MAAdV,EAAMmB,MAAgBnB,EAAMmB,OAASF,EAAUE,MACjDH,EAAOI,QAAQpB,EAAMmB,MAGG,MAAtBnB,EAAMqB,cAAwBrB,EAAMqB,eAAiBJ,EAAUI,cACjEL,EAAOM,gBAAgBtB,EAAMqB,cAGV,MAAjBrB,EAAMuB,SAAmBvB,EAAMuB,UAAYN,EAAUM,SACvDP,EAAOQ,WAAWxB,EAAMuB,SAGH,MAAnBP,EAAOS,UAAoBzB,EAAM0B,YAAcT,EAAUS,aACnC,IAApB1B,EAAM0B,UACRV,EAAOS,SAASE,SAEhBX,EAAOS,SAASG,e,iCClCtB,kIAiEeC,UAhDf,YAAqC,IAAtBC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,IAAKC,EAAK,EAALA,IACVC,cACjBC,QAAQC,IAAIJ,EAAKC,EAAK,cACtB,IAAMI,EAASC,IAAElB,KAAK,CAClBmB,QAASC,IACTC,SAAU,CAAC,GAAG,IACdC,WAAY,CAAC,GAAI,IACjBC,YAAa,KACbC,UAAW,KACXC,WAAY,KACZC,aAAc,OAGlB,OACQ,qBAAKC,UAAU,yBAAf,SACA,eAAC,IAAD,CACIC,OAAQ,CAAChB,EAAKC,GACdgB,KAAM,GAAIC,iBAAiB,EAC3BC,MAAO,CAAC9C,OAAO,KAHnB,UAQQ,cAAC,IAAD,CAEI+C,IAAI,8CACJC,YAAY,2EAXxB,OAaStB,QAbT,IAaSA,OAbT,EAaSA,EAAWuB,KAAI,SAAC3C,GAAD,OACZ,cAAC,IAAD,CACAA,SAAU,QAACA,QAAD,IAACA,OAAD,EAACA,EAAUqB,IAAX,OAAgBrB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAUsB,KACpCb,KAEIiB","file":"static/js/34.9a0902d0.chunk.js","sourcesContent":["function LocationIcon(props) {\r\n    return (\r\n      <svg\r\n        baseProfile=\"tiny\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"currentColor\"\r\n        height=\"1em\"\r\n        width=\"1em\"\r\n        {...props}\r\n      >\r\n        <path d=\"M17.657 5.304c-3.124-3.073-8.189-3.073-11.313 0a7.78 7.78 0 000 11.13L12 21.999l5.657-5.565a7.78 7.78 0 000-11.13zM12 13.499c-.668 0-1.295-.26-1.768-.732a2.503 2.503 0 010-3.536c.472-.472 1.1-.732 1.768-.732s1.296.26 1.768.732a2.503 2.503 0 010 3.536c-.472.472-1.1.732-1.768.732z\" />\r\n      </svg>\r\n    );\r\n  }\r\n  \r\n  export default LocationIcon;\r\n  ","export default __webpack_public_path__ + \"static/media/home_icon.1a7516c1.svg\";","import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","import {useEffect, lazy, Suspense, useState} from 'react';\r\nimport { Route, Switch, useRouteMatch, useHistory, Redirect, Link, useLocation, useParams } from 'react-router-dom';\r\nimport L from 'leaflet';\r\nimport { MapContainer, useMap, useMapEvent, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport LocationIcon from '../icons/LocationIcon'\r\nimport logo from \"../pages/image/logo.svg\"\r\nimport logos from \"../pages/image/lhome.png\"\r\nimport {home} from 'react-icons-kit/fa/home'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { post, fetchData } from '../application/middlewares/index';\r\nimport { Icon } from 'react-icons-kit'\r\nimport logos1 from \"../pages/image/home_icon.svg\"\r\n\r\n// import {home} from 'react-icons-kit/fa/home';\r\n\r\n\r\n\r\nfunction Maps({locations, lat, lng}){\r\n    const dispatch = useDispatch();\r\n    console.log(lat, lng, \"    126541\")\r\n    const myIcon = L.icon({\r\n        iconUrl: logos1,\r\n        iconSize: [40,40],\r\n        iconAnchor: [10, 20],\r\n        popupAnchor: null,\r\n        shadowUrl: null,\r\n        shadowSize: null,\r\n        shadowAnchor: null\r\n    });\r\n       \r\n    return(\r\n            <div className=\"w-full my-5 bg-red-100\">\r\n            <MapContainer \r\n                center={[lat, lng ]} \r\n                zoom={12} scrollWheelZoom={true}\r\n                style={{height:500}}\r\n                >\r\n                    \r\n                    {/* <LocationIcon className=\"absolute text-gray-800 top-1/2 left-1/2 text-5xl -mt-11 -ml-6\" style={{zIndex:100000}}/> */}\r\n\r\n                    <TileLayer\r\n\r\n                        url=\"https://gamysh.com/map/tile/{z}/{x}/{y}.png\"\r\n                        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    />\r\n                    {locations?.map((position)=>(\r\n                        <Marker \r\n                        position={[position?.lat, position?.lng]}  \r\n                        icon={ \r\n                            // <Icon size={25} icon={home} className=\"text-blue-600\" />\r\n                            myIcon\r\n                         }\r\n                        >\r\n                            {/* <Popup>\r\n                    your home location\r\n                    </Popup> */}\r\n                    \r\n                        </Marker>\r\n                    ))}\r\n               \r\n            </MapContainer>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Maps;"],"sourceRoot":""}