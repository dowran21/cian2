{"version":3,"sources":["components/StatusCard.js","pages/Analytics/index.js","application/middlewares/index.js"],"names":["StatusCard","color","icon","title","amount","percentage","percentageColor","percentageIcon","date","className","iconOnly","name","reducer","state","action","type","status","payload","user_types","loading","price_data","types","type_id","chart_trigger","start_date","end_date","user_chart","estate_chart","Analytics","useReducer","line_data","setState","dispatch","useDispatch","token","useSelector","auth","useEffect","get","url","response","success","data","rows","toast","error","console","log","BgLoader","length","map","item","id","FaUser","FaUserTie","count","active","MdBusiness","deactive","onChange","e","target","value","hidden","onFocus","currentTarget","onBlur","placeholder","LineChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","fillOpacity","fill","style","BarChart","Bar","a","api","withCredentials","message","post","params"],"mappings":"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","file":"static/js/25.87fa7280.chunk.js","sourcesContent":["import Card from '@material-tailwind/react/Card';\nimport CardRow from '@material-tailwind/react/CardRow';\nimport CardHeader from '@material-tailwind/react/CardHeader';\nimport CardStatus from '@material-tailwind/react/CardStatus';\nimport CardStatusFooter from '@material-tailwind/react/CardStatusFooter';\nimport Icon from '@material-tailwind/react/Icon';\n\nexport default function StatusCard({\n    color,\n    icon,\n    title,\n    amount,\n    percentage,\n    percentageColor,\n    percentageIcon,\n    date,\n}) {\n    return (\n        <div className=\"px-4 mb-10\">\n            <Card>\n                <CardRow>\n                    <CardHeader color={color} iconOnly className=\"mb-0\">\n                        {icon}\n                    </CardHeader>\n\n                    <CardStatus title={title} amount={amount} />\n                </CardRow>\n\n                <CardStatusFooter\n                    amount={percentage}\n                    color={percentageColor}\n                    date={date}\n                >\n                    <Icon color={percentageColor} name={percentageIcon} />\n                </CardStatusFooter>\n            </Card>\n        </div>\n    );\n}\n","import { useEffect, useReducer} from \"react\";\nimport { get } from '../../application/middlewares';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport StatusCard from \"../../components/StatusCard\"\nimport toast from \"react-hot-toast\";\nimport {FaUserTie} from \"@react-icons/all-files/fa/FaUserTie\"\nimport {FaUser} from \"@react-icons/all-files/fa/FaUser\"\nimport { MdBusiness } from \"@react-icons/all-files/md/MdBusiness\";\nimport BgLoader from \"../../components/BgLoader\";\nimport {\n    LineChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, \n    Line, AreaChart, Area, BarChart, Bar\n} from \"recharts\"\n\nfunction reducer(state, action){\n    switch(action.type){\n        case \"SET_STATUS\":{\n            return{\n                ...state,\n                status:action.payload,\n            }\n        }\n        case \"SET_USERS\":{\n            return{\n                ...state,\n                user_types:action.payload        \n            }\n        }\n        case \"SET_LOADING\":{\n            return{\n                ...state,\n                loading:false\n            }\n        }\n        case \"SET_PRICE_STAT\":{\n            return {\n                ...state,\n                price_data:action.payload\n            }\n        }\n        case \"SET_TYPES\":{\n            return {\n                ...state,\n                types:action.payload\n            }\n        }\n        case \"SET_TYPE_ID\" :{\n            return {\n                ...state,\n                type_id:action.payload,\n                chart_trigger:!state.chart_trigger\n            }\n        }\n        case \"SET_START_DATE\":{\n            return {\n                ...state,\n                start_date:action.payload,\n                chart_trigger:!state.chart_trigger\n            }\n        }\n        case \"SET_END_DATE\":{\n            return {\n                ...state,\n                end_date:action.payload,\n                chart_trigger:!state.chart_trigger\n            }\n        }\n        case \"SET_USER_CHART\":{\n            return {\n                ...state,\n                user_chart:action.payload\n            }\n        }\n        case \"SET_ESTATE_COUNT\" :{\n            return {\n                ...state,\n                estate_chart:action.payload\n            }\n        }\n        default: return state;\n    }\n}\n\n\nfunction Analytics(){\n\n    const [state, setState] = useReducer(reducer, {\n        loading:true, user_types:[], status:{}, line_data: [], price_data:[],\n        types:[], chart_trigger:false, type_id:'',start_date:\"\", end_date:\"\", user_chart:[],\n        estate_chart:[]\n    })\n    \n    const dispatch = useDispatch()\n    const token = useSelector(state => state.auth.token)\n    // console.log(token)\n    useEffect(()=>{\n        dispatch(get({\n            url: `api/admin/get-active-real-estates`,\n            token,\n            action: (response) =>{\n                if(response.success){\n                    setState({type:\"SET_STATUS\", payload:response.data.rows})\n                }else{\n                    toast.error(\"Неизвестная ошибка\")\n                }\n            }\n        }));\n        dispatch(get({\n            url: `api/admin/get-user-types`,\n            token,\n            action: (response) =>{\n                if(response.success){\n                    setState({type:\"SET_USERS\", payload:response.data.rows})\n                }else{\n                    toast.error(\"Неизвестная ошибка\")\n                }\n            }\n        }));\n        dispatch(get({\n            url: `api/admin/all-real-estate-statistics`,\n            token,\n            action: (response) =>{\n                // console.log(response)\n                if(response.success){\n                    }\n            }\n        }));\n        dispatch(get({\n            url:`api/admin/get-all-types`,\n            token,\n            action: (response) =>{\n                // console.log(response.data)\n                if(response.success){\n                    setState({type:\"SET_TYPES\", payload:response.data.rows})\n                }else{\n                    toast.error(\"Неизвестная ошибка призагрузке типов\")\n                }\n            }\n        }));\n        setState({type:\"SET_LOADING\", payload:{}});\n\n    }, [])\n\n    useEffect(()=>{\n        dispatch(get({\n            url: `api/admin/get-price-statistics?type_id=${state.type_id}&start_date=${state.start_date}&end_date=${state.end_date}`,\n            token,\n            action: (response) =>{\n                // console.log(response)\n                if(response.success){\n                    setState({type:\"SET_PRICE_STAT\", payload:response.data.rows})\n                }\n            }\n        }));\n        dispatch(get({\n            url: `api/admin/get-user-chart?start_date=${state.start_date}&end_date=${state.end_date}`,\n            token,\n            action : (response) =>{\n                if(response.success){\n                    console.log(response.data)\n                    setState({type:\"SET_USER_CHART\", payload:response.data.rows})\n                    console.log(response.data.rows)\n                }\n            }\n        }))\n        dispatch(get({\n            url : `api/admin/get-real-estate-statistics?start_date=${state.start_date}&end_date=${state.end_date}`,\n            token,\n            action : (response) =>{\n                if(response.success){\n                    console.log(response.data)\n                    setState({type:\"SET_ESTATE_COUNT\", payload:response.data.rows})\n                }\n            }\n        }))\n    }, [state.chart_trigger])\n    return(\n        <div className = \"pb-10\">\n            {state.loading ? <BgLoader /> : \n            <>\n             <div className=\"container mx-auto max-w-full py-10\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-4 mb-4\">\n                        {state.user_types?.length > 0 && state.user_types.map(item => (\n                            <StatusCard key = {item.id} color = {item.id === 1 ? `blue` : `red`} icon = {item.id === 1 ? <FaUser className = \"w-full h-full\"/> : <FaUserTie className = \"w-full h-full\"/> }\n                            title = {item.id === 1 ? `Собственники` : `Риэторы`} amount = {item.count} />\n                        ))\n                        }\n                        {state.status?.active &&\n                            <StatusCard color =  \"blue\" icon = {<MdBusiness className = \"w-full h-full\"/>} title = {\"Активные объявления\"} amount = {state.status.active}/>\n                        }\n                        {state.status?.deactive &&\n                            <StatusCard color =  \"red\" icon = {<MdBusiness className = \"w-full h-full\"/>} title = {\"Неактивные объявления\"} amount = {state.status.deactive} />\n                        }\n                        \n                    </div>\n            </div>\n            <div className = \"p-10 flex flex-row jsutify-center items-beetwen\">\n                <div className = \"pl-3\">\n                    <label className = \"pl-4\">Выберите тип</label>\n                    <select onChange = {(e)=>setState({type:\"SET_TYPE_ID\", payload:e.target.value})} className = \"w-1/3 pr-4 pl-15 h-10 text-gray-700 rounded-2xl appearance-none w-full bg-white shadow-sm placeholder-gray-400 focus:shadow-inner text-sm focus:outline-none pl-10\">\n                        <option className = \"rounded-xl\" value=\"\" hidden>Тип</option>\n                        {state.types?.map(item => (\n                            <option key = {item.id} value = {item.id}>{item.name}</option>\n                        ))}\n                    </select>\n                </div>\n                <div className = \"pl-3\">\n                    <label className = \"pl-4\">Введите начальное число</label>\n                    <input onChange={(e)=>{setState({type:\"SET_START_DATE\", payload:e.target.value})}} type = \"text\" onFocus = {(e)=>{e.currentTarget.type=\"date\"}} onBlur={(e)=>e.currentTarget.type=\"text\"}  placeholder = \"Введите начальное число\" className = \"w-1/3 pr-4 pl-15 h-10 text-gray-700 rounded-2xl appearance-none w-full bg-white shadow-sm placeholder-gray-400 focus:shadow-inner text-sm focus:outline-none pl-10\"/>        \n                </div>\n                <div className = \"pl-3\">\n                    <label className = \"pl-4\">Введите конечное число</label>\n                    <input onChange={(e)=>{setState({type:\"SET_END_DATE\", payload:e.target.value})}} type = \"text\" onFocus = {(e)=>{e.currentTarget.type=\"date\"}} onBlur={(e)=>e.currentTarget.type=\"text\"}  placeholder = \"Введите начальное число\" className = \"w-1/3 pr-4 pl-15 h-10 text-gray-700 rounded-2xl appearance-none w-full bg-white shadow-sm placeholder-gray-400 focus:shadow-inner text-sm focus:outline-none pl-10\"/>\n                </div>\n            </div>\n            { !state.loading &&\n            <div className = \"flex flex-col justify-center items-center\">\n            <LineChart className = \"p-3\" width={1000} height={250} data={state.price_data}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"created_at\" />\n                            <YAxis />\n                        <Tooltip />\n                    <Legend />  \n                <Line  type=\"monotone\" dataKey=\"Продажа\" stroke=\"#8884d8\" />\n                <Line type=\"monotone\" dataKey=\"Аренда\" stroke=\"#82ca9d\" />\n            </LineChart>\n\n            <AreaChart className = \"py-5 pl-2\" width={1000} height={250} data={state.estate_chart}\n                margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                <defs>\n                    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                    <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0}/>\n                    </linearGradient>\n                    <linearGradient id=\"colorKv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#fc4103\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#fc4103\" stopOpacity={0}/>\n                    </linearGradient>\n                    <linearGradient id=\"colorZv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#03fcf4\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#03fcf4\" stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <XAxis dataKey=\"created_at\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Area type=\"monotone\" dataKey=\"На продаже\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorUv)\" />\n                <Area type=\"monotone\" dataKey=\"Проданные\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" />\n                <Area type=\"monotone\" dataKey=\"Сдается в аренду\" stroke=\"#fc4103\" fillOpacity={1} fill=\"url(#colorKv)\" />\n                <Area type=\"monotone\" dataKey=\"Сдано в аренду\" stroke=\"#03fcf4\" fillOpacity={1} fill=\"url(#colorZv)\" />\n            </AreaChart>\n\n            <div className = \"flex flex-row justify-center items-center p-5\">\n                <div className = \"\" style = {{color:\"#8884d8\"}}>На продаже</div>\n                <div className = \"pl-3\" style = {{color:\"#82ca9d\"}}>Проданные</div>\n                <div className = \"pl-3\" style = {{color:\"#fc4103\"}}>Сдается в аренду</div>\n                <div className = \"pl-3\" style = {{color:\"#03fcf4\"}}>Сдано в аренду</div>\n            </div>\n\n            <BarChart width={1000} height={250} data={state.user_chart}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"created_at\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"Собственники\" fill=\"#8884d8\" />\n                <Bar dataKey=\"Риелторы\" fill=\"#82ca9d\" />\n            </BarChart>\n                </div>\n            }\n            </>\n            }\n        </div>\n    )\n};\n\nexport default Analytics;","import {api} from '../api/index';\nimport toast from 'react-hot-toast';\n\nexport const get = ({ url, token, action }) => async () => {\n    try {\n        const response = await api.get({ url, token, withCredentials: false });\n        return action({ success: true, data: response.data });\n    } catch (error) {\n        console.log(error)\n        return action({ success: false, message: error?.response?.data });\n    }\n}\n    \nexport const post = ({ url, token, action, data }) => async dispatch => {\n    try {\n        const response = await api.post({ url, params: data, withCredentials: false, token });\n        return action({ success: true, data: response.data });\n    } catch (error) {\n        return action({ success: false, message: error?.response?.data, error: error?.response });\n    }\n}\n    \nexport const put = ({ url, token, action, data }) => async dispatch => {\n    try {\n        const response = await api.update({ url, params: data, withCredentials: false, token });\n        return action({ success: true, data: response.data });\n    } catch (error) {\n        return action({ success: false, message: error?.response?.data });\n    }\n}\n    \nexport const del = ({ url, token, action }) => async dispatch => {\n    try {\n        const response = await api.delete({ url, token, withCredentials: false });\n        dispatch(action(response.data));\n    } catch (error) {\n        console.log(error)\n        toast.error(\"Üstinlikli Bolmady\");\n    }\n}"],"sourceRoot":""}