{"version":3,"sources":["pages/Auth/login.js","application/selectors/auth.js"],"names":["schema","Yup","shape","phone","min","max","required","matches","password","Login","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","setError","dispatch","useDispatch","history","useSelector","getIsLogged","useHistory","className","onSubmit","data","post","url","token","action","response","success","setToken","payload","refresh_token","loginSuccess","push","console","log","type","message","error","name","render","field","onChange","onBlur","value","ref","size","color","outline","placeholder","to","buttonType","rounded","block","iconOnly","ripple","state","auth","isLogged","getToken","getCategory","categories"],"mappings":"uGAAA,oJAqIA,IAAMA,EAAUC,MAAaC,MAAM,CAC/BC,MAAMF,MAAaG,IAAI,EAAG,oBAAoBC,IAAI,EAAG,2BAClDC,SAAS,yBACTC,QACC,kFACF,mBAEFC,SAAUP,MAAaG,IAAI,EAAG,oBAAoBC,IAAI,GAAI,4BAAoBC,SAAS,8EAAoEC,QACvJ,yCACF,gDAGSE,UAhIf,WACI,MAAmEC,YAAQ,CACvEC,SAAUC,YAAYZ,KADjBa,EAAT,EAASA,QAASC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAAUE,EAAvD,EAAuDA,SAGjDC,EAAWC,cAEXC,GADWC,YAAYC,KACbC,eA2ChB,OACI,qBAAKC,UAAU,iDAAf,SACA,qBAAKA,UAAU,+FAAf,SACA,uBAAMC,SAAUX,GAvCH,SAACY,GAMdR,EAASS,YAAK,CACVC,IAAI,aACJC,MAAM,GACNH,OACAI,OAAO,SAACC,GACJ,GAAGA,EAASC,QAAQ,CAEhBd,EAASe,YAASF,EAASL,KAAKG,QAEhC,IAAMK,EAAU,CAAC,MAAQH,EAASL,KAAKG,MAAO,KAAOE,EAASL,KAAKA,MAE/DK,EAASL,KAAKA,MAAQK,EAASL,KAAKS,eACpCjB,EAASkB,YAAaF,IACtBd,EAAQiB,KAAK,MAEbjB,EAAQiB,KAAK,wBAGhB,CAAC,IAAD,MACDC,QAAQC,IAAI,gBAAgBR,GAE5Bd,EAAS,QAAS,CAAEuB,KAAK,SAAUC,QAAO,OAACV,QAAD,IAACA,GAAD,UAACA,EAAUU,eAAX,iBAAC,EAAmBf,YAApB,iBAAC,EAAyBgB,aAA1B,aAAC,EAAgCvC,gBAY/CqB,UAAU,2BAAlD,UACI,oBAAIA,UAAU,mEAAd,4BAEA,qBAAKA,UAAU,cAAf,SACA,cAAC,IAAD,CACQX,QAASA,EACT8B,KAAK,QACLC,OAAQ,YAAkD,IAAD,MAA9CC,MAASC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,OAA2B,EAAnBC,MAAmB,EAAZC,IACzC,OACI,cAAC,IAAD,CACAH,SAAUA,EAAUC,OAAQA,EAC7BP,KAAK,MAAOU,KAAK,UAAUC,MAAM,OACjCC,SAAS,EAAMC,YAAY,QAAQX,MAAK,UAAE3B,EAAOZ,aAAT,aAAE,EAAcsC,eAKvE,qBAAKjB,UAAU,cAAf,SACA,cAAC,IAAD,CACQX,QAASA,EACT8B,KAAK,WACLC,OAAQ,YAAkD,IAAD,MAA9CC,MAASC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,OAA2B,EAAnBC,MAAmB,EAAZC,IACzC,OACI,cAAC,IAAD,CACAH,SAAUA,EAAUC,OAAQA,EAC7BP,KAAK,WAAYU,KAAK,UAAUC,MAAM,OACtCC,SAAS,EAAMC,YAAY,WAAWX,MAAK,UAAE3B,EAAOP,gBAAT,aAAE,EAAiBiC,eAK7E,cAAC,IAAD,CAAMa,GAAG,eAAe9B,UAAU,8CAAlC,8BAIA,qBAAKA,UAAU,+BAAf,SACA,cAAC,IAAD,CACI2B,MAAM,YACNI,WAAW,OACXL,KAAK,UACLM,SAAS,EACTC,OAAO,EACPC,UAAU,EACVC,OAAO,OAPX,qBAaA,sBAAKnC,UAAU,yCAAf,UACI,sBAAMA,UAAU,wCAEhB,qBAAKA,UAAU,4FAAf,SACI,cAAC,IAAD,CAAM8B,GAAG,iBAAT,0CAIJ,sBAAM9B,UAAU,oD,gCC9HhC,sGAAO,IAAMF,EAAc,SAAAsC,GAAK,OAAIA,EAAMC,KAAKC,UAClCC,EAAW,SAAAH,GAAK,OAAIA,EAAMC,KAAKhC,OAM/BmC,EAAc,SAAAJ,GAAK,OAAIA,EAAMlC,KAAKuC","file":"static/js/27.db44f48a.chunk.js","sourcesContent":["import {useEffect} from 'react';\nimport { Link, Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {LoadUser} from '../../application/middlewares/auth';\nimport {getIsLogged} from '../../application/selectors/auth';\nimport Input from \"@material-tailwind/react/Input\";\nimport Button from \"@material-tailwind/react/Button\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useForm, Controller} from \"react-hook-form\";\nimport { post } from '../../application/middlewares';\nimport { GetCookie } from '../../utils/cookie';\nimport { loginSuccess, setToken } from '../../application/actions/auth';\n// import {loginFormErrors} from './translations';\n\n\nfunction Login(){\n    const {  control, handleSubmit, formState: { errors }, setError} = useForm({\n        resolver: yupResolver(schema)\n    });\n    const dispatch = useDispatch();\n    const isLogged = useSelector(getIsLogged);\n    const history = useHistory();\n    // useEffect(() => {\n    //     if(isLogged === false){\n    //         dispatch(LoadUser({history}));\n    //     }// eslint-disable-next-line\n    // }, [dispatch, isLogged]);\n//    const refresh_token = GetCookie('refresh_token')\n    const onSubmit = (data) => {\n        // console.log(data);\n        // console.log(data?.owner_id);\n\n    \n\n        dispatch(post({\n            url:'user/login',\n            token:'',\n            data,\n            action:(response)=>{\n                if(response.success){\n                    // console.log(\"gelen login\",response)\n                    dispatch(setToken(response.data.token));\n                    // console.log(\"token \", response.data.token)\n                    const payload = {\"token\":response.data.token, \"data\":response.data.data}\n                    // console.log(payload)\n                    if (response.data.data && response.data.refresh_token){  \n                        dispatch(loginSuccess(payload));\n                        history.push('/')\n                    } else {\n                        history.push('/auth/verifycode')\n                    }\n                    \n                }else{\n                    console.log(\"login Errors \",response);\n                    // console.log(response?.message?.data?.error?.phone)\n                    setError('phone', { type:'manual', message:response?.message?.data?.error?.phone});\n                }\n            },\n\n        }))\n        // dispatch(AdminRegister({data, setError, history}));\n    }\n    // console.log(setError)\n    // console.log(errors.phone?.message, '-----')\n    return(\n        <div className=\"flex justify-center items-center h-full w-full\">\n        <div className=\"flex max-w-sm mx-auto overflow-hidden bg-white rounded-lg shadow-lg dark:bg-gray-800 lg:w-80\">\n        <form onSubmit={handleSubmit(onSubmit)} className=\"w-full px-6 py-8 md:px-8\">\n            <h2 className=\"text-2xl font-semibold text-center text-gray-700 dark:text-white\">Hosh geldiniz!</h2>\n            {/* <p className=\"text-xl text-center text-gray-600 dark:text-gray-200\">Welcome back!</p> */}\n            <div className=\"mt-4 w-full\">\n            <Controller\n                    control={control}\n                    name=\"phone\"\n                    render={({ field: { onChange, onBlur, value, ref } }) => {\n                        return (\n                            <Input\n                            onChange={onChange} onBlur={onBlur} \n                           type=\"tel\"  size=\"regular\" color=\"blue\"\n                           outline={true} placeholder=\"Phone\" error={errors.phone?.message} />\n                    )}}\n                />\n            </div>\n\n            <div className=\"mt-9 w-full\">\n            <Controller\n                    control={control}\n                    name=\"password\"\n                    render={({ field: { onChange, onBlur, value, ref } }) => {\n                        return (\n                            <Input\n                            onChange={onChange} onBlur={onBlur} \n                           type=\"password\"  size=\"regular\" color=\"blue\"\n                           outline={true} placeholder=\"Password\" error={errors.password?.message} />\n                    )}}\n                />\n            </div>\n\n            <Link to='/auth/forgot' className=\"flex justify-end text-sm text-gray-500 mt-5\">\n                forgot password?\n            </Link>\n\n            <div className=\"mt-6 w-full flex justify-end\">\n            <Button\n                color=\"lightBlue\"\n                buttonType=\"link\"\n                size=\"regular\"\n                rounded={false}\n                block={false}\n                iconOnly={false}\n                ripple=\"dark\"\n            >\n                Login\n            </Button>\n            </div>\n            \n            <div className=\"flex items-center justify-between mt-4\">\n                <span className=\"border-b dark:border-gray-600 w-1/4\"></span>\n\n                <div className=\"text-xs w-4/6 text-gray-500 dark:text-gray-400 hover:underline text-center cursor-pointer\">\n                    <Link to='/auth/register'>\n                    Do you haven't an account?\n                    </Link>\n                    </div>\n                <span className=\"border-b dark:border-gray-600 w-1/4\"></span>\n            </div>\n        </form>\n    </div>\n    </div>\n    )\n}\nconst schema =  Yup.object().shape({\n    phone:Yup.string().min(6, \"Azyndan 6 simwol\").max(8, \"Iň köp 8 simwol\")\n      .required(\"Telefon nomer bolmaly\")\n      .matches(\n        /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/,\n      \"Hökman gerek\"\n    ),\n    password: Yup.string().min(6, \"Azyndan 6 simwol\").max(50, \"Iň köp 50 simwol\").required('Iň azyndan 8 simwol bolmaly, iň bolmanda 1 harp we 1 san bolmaly').matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n      \"'Iň bolmanda 1 harp we 1 san bolmaly'\"\n    ),\n  });\nexport default Login;","export const getIsLogged = state => state.auth.isLogged;\nexport const getToken = state => state.auth.token;\nexport const getIsLoading = state => state.auth.isLoading;\nexport const getUser = state => state.auth.user;\nexport const getAuth = state => state.auth;\nexport const getStaffList = state => state.auth.staff_list\n// data\nexport const getCategory = state => state.data.categories;\nexport const getFilters = state => state.data.filters;"],"sourceRoot":""}