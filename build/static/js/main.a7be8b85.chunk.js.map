{"version":3,"sources":["Redux/Admin/Specifications/SpecificationsReducer.tsx","Images/gearLoader.gif","Components/Inputs/PhoneInput/PhoneInput.tsx","Components/Inputs/PasswordInput/PasswordInput.tsx","Redux/Admin/Analytics/AnalyticsReducer.ts","Redux/Admin/Locations/LocationsReducer.ts","Redux/Admin/Operators/OperatorsReducer.ts","Redux/Admin/Pictures/ImagesReducer.ts","Redux/Operator/Unapproved/UnapprovedReducer.ts","Components/Loader/HourglassLoader/HourglassLoader.module.css","Components/Loader/HourglassLoader/HourglassLoader.tsx","Images/logo.png","Pages/Auth/Auth.tsx","App.tsx","Redux/store.ts","index.tsx","Redux/Auth/AuthReducer.ts","Pages/Auth/Auth.module.css","Redux/Auth/AuthThunks.ts","Redux/Auth/AuthSelector.js","api.js","Components/Inputs/PhoneInput/PhoneInput.module.css","Components/Inputs/PasswordInput/PasswordInput.module.css","Redux/Admin/Types/TypesReducer.ts"],"names":["SpecificationsInitialState","specificationsData","searchSpecifications","specificationData","enabled_values","disabled_values","isLoading","totalCount","SpecificationsActions","changeIsLoading","bool","type","changeSpecificationActivation","id","boolValue","data","changeSearchedSpecificationActivation","addSpecifications","specifications","addSearchedSpecifications","makeSearchedSpecificationsNull","addSpecification","specification","switchEnabledToDisabledSpecification","value","switchDisabledToEnabledSpecification","addTotalCount","count","SpecificationsReducer","state","action","map","is_active","filter","PhoneInput","useFormContext","register","errors","formState","className","styles","main_block","mask","required","disabled","input","name","label","phone","severity","PasswordInput","React","useState","showPassword","setShowPassword","variant","htmlFor","pattern","minLength","endAdornment","position","edge","onClick","password","AnalyticsState","analyticsData","shortenedTypes","AnalyticsActions","addAnalyticsData","addShortenedTypes","AnalyticsReducer","LocatiosState","mainLocations","regionLocations","LocationsActions","addMainLocations","addNewRegionLocations","addNewMainLocations","addRegionLocations","LocationsReducer","OperatorsInitialState","operators","operatorsCount","searchedOperators","OperatorsActions","addOperators","addSerchedOperators","changeOperatorsCound","makeSearchOperatorsNull","deleteOperator","createOperator","operator","OperatorsReducer","Number","ImagesActions","addImagesLocations","imagesLocations","addLocationImages","locationImages","addImage","image","ImagesReducer","ImagesInitialState","imageLocations","AuthInitialState","estates","estate","deleteEstate","UnapproveActions","addEstatesData","addEstateData","addDeleteEstate","UnapproveReducer","actions","module","exports","HourglassLoader","src","gearLoader","alt","Auth","dispatch","useDispatch","useSelector","GetIsLoading","methods","useForm","handleSubmit","content_block","login_block","login_title","form","onSubmit","shortenedPhone","substr","loginThunk","button_block","Button","button","image_section","logo","AdminIndex","lazy","OperatorIndex","App","role_id","GetRoleId","useEffect","loadOperatorThunk","loadAdminThunk","fallback","path","component","to","rootReducer","combineReducers","auth","AuthReducer","unapproved","locations","images","types","TypesReducer","analytics","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","userData","email","isAuth","access_token","AuthActions","addUserData","authUserData","addAccessToken","changeRoleId","roleId","logout","a","api","postApi","url","token","withCredentials","params","response","Cookies","set","refresh_token","console","log","message","get","getApi","contentType","GetAccessToken","axiosInstance","axios","create","baseURL","process","timeout","headers","accept","Authorization","interceptors","use","error","originalRequest","config","status","then","defaults","catch","err","Promise","reject","post","uploadPhoto","formData","TypesInitialState","active_type_specifications","deleted_type_specifications","unusedSpecs","wannaUseSpecs","TypesActions","addTypes","addType","typeData","changeDeleted","switchTrueToFalseSpecification","switchFalseToTrueSpecification","addUnusedSpecToType","addCreatedSpecToUnused","createdSpec","changeUnusedToWannaUse","spec","changeWannaUseToUnused","clearWannaUseSpecs","type_spec_id","unusedSpec","spec_id","Object","assign","wannaUseSpec"],"mappings":"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","file":"static/js/main.a7be8b85.chunk.js","sourcesContent":["import { InferActionsTypes } from '../../store';\r\n\r\n\r\nconst SpecificationsInitialState = {\r\n    specificationsData: [] as Array<SpecificationsDataType>,\r\n    searchSpecifications: null as any,\r\n    specificationData: {} as SpecificationDataType,\r\n    enabled_values: [] as Array<ValuesType>,\r\n    disabled_values: [] as Array<ValuesType>,\r\n    isLoading: false,\r\n    totalCount: null\r\n};\r\n\r\n// Types\r\nexport type ValuesType = [\r\n    {\r\n        id: number;\r\n        absolute_value: string;\r\n        enable: boolean;\r\n        value_translations: null | {\r\n            language_id: number;\r\n            name: string;\r\n        }\r\n    }\r\n];\r\n\r\nexport type SpecificationsDataType = {\r\n    id: number;\r\n    absolute_name: string;\r\n    is_multiple: boolean;\r\n    is_required: boolean;\r\n    is_active: boolean;\r\n    translations: [{language_id: number;name: string}];\r\n};\r\n\r\nexport type SpecificationDataType = {\r\n    id: number;\r\n    absolute_name: string;\r\n    translations: {language_id: number; name: string;}[];\r\n    enabled_values: null | ValuesType[];\r\n    disabled_values: null | ValuesType[];\r\n}\r\n\r\nexport const SpecificationsActions =  {\r\n    changeIsLoading: (bool: boolean) => ({type: 'CHANGE_IS_LOADING', bool} as const),\r\n    changeSpecificationActivation: (id: number, boolValue: boolean) => ({type: 'CHANGE_SPECIFICATION_ACTIVATION', data: {id, boolValue}} as const),\r\n    changeSearchedSpecificationActivation: (id: number, boolValue: boolean) => ({type: 'CHANGE_SEARCHED_SPECIFICATION_ACTIVATION', data: {id, boolValue}} as const),\r\n    addSpecifications: (specifications: Array<SpecificationsDataType>) => ({type: 'ADD_SPECIFICATIONS', specifications} as const),\r\n    addSearchedSpecifications: (specifications: Array<SpecificationsDataType>) => ({type: 'ADD_SEARCHED_SPECIFICATIONS', specifications} as const),\r\n    makeSearchedSpecificationsNull: () => ({type: 'MAKE_SEARCHED_SPECIFICATIONS_NULL'} as const),\r\n    addSpecification: (specification: SpecificationDataType) => ({type: 'ADD_SPECIFICATION', specification} as const),\r\n    switchEnabledToDisabledSpecification: (value: any) => ({type: 'SWITCH_ENABLE_TO_DISABLE_SPECIFICATION', value} as const),\r\n    switchDisabledToEnabledSpecification: (value: any) => ({type: 'SWITCH_DISABLE_TO_ENABLE_SPECIFICATION', value} as const),\r\n    addTotalCount: (count: number) => ({type: 'ADD_TOTAL_COUNT', count} as const)\r\n};\r\n\r\n\r\nexport const SpecificationsReducer = (state = SpecificationsInitialState, action: SpecificationsActionsType ) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_SEARCHED_SPECIFICATION_ACTIVATION':\r\n            return {\r\n                ...state,\r\n                searchSpecifications: [...state.searchSpecifications.map((specification: any) => {\r\n                    if (specification.id === action.data.id) {\r\n                        specification.is_active = action.data.boolValue;\r\n                    }\r\n                    return specification;\r\n                })]\r\n            };\r\n        case 'CHANGE_SPECIFICATION_ACTIVATION':\r\n            return {\r\n                ...state,\r\n                specificationsData: [...state.specificationsData.map((specification) => {\r\n                    if (specification.id === action.data.id) {\r\n                        specification.is_active = action.data.boolValue;\r\n                    }\r\n                    return specification;\r\n                })]\r\n            };\r\n        case 'CHANGE_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.bool\r\n            };\r\n        case 'ADD_SPECIFICATIONS':\r\n            return {\r\n                ...state,\r\n                specificationsData: action.specifications\r\n            };\r\n        case 'ADD_SEARCHED_SPECIFICATIONS':\r\n            debugger;\r\n                return {\r\n                    ...state,\r\n                    searchSpecifications: action.specifications\r\n                };\r\n        case 'MAKE_SEARCHED_SPECIFICATIONS_NULL':\r\n            return {\r\n                ...state,\r\n                searchSpecifications: null\r\n            };\r\n        case 'ADD_SPECIFICATION':\r\n            return {\r\n                ...state,\r\n                specificationData: action.specification,\r\n                enabled_values: action.specification.enabled_values,\r\n                disabled_values: action.specification.disabled_values,\r\n            };\r\n        case 'SWITCH_ENABLE_TO_DISABLE_SPECIFICATION':\r\n            return {\r\n                ...state,\r\n                enabled_values: state.enabled_values.filter((value: any) => value.id !== action.value.id),\r\n                disabled_values: (state.disabled_values ?  [...state.disabled_values, action.value] : action.value)\r\n            };\r\n        case 'SWITCH_DISABLE_TO_ENABLE_SPECIFICATION':\r\n            return {\r\n                ...state,\r\n                disabled_values: state.disabled_values.filter((value: any) => value.id !== action.value.id),\r\n                enabled_values: (state.disabled_values ? [...state.enabled_values, action.value] : action.value)\r\n            };\r\n        case 'ADD_TOTAL_COUNT':\r\n            return {\r\n                ...state,\r\n                totalCount: action.count\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Store type\r\nexport type SpecificationsInitialStateType = typeof SpecificationsInitialState;\r\n\r\n// Action types\r\nexport type SpecificationsActionsType = InferActionsTypes<typeof SpecificationsActions>;","export default __webpack_public_path__ + \"static/media/gearLoader.133a2ce4.gif\";","import { Alert, TextField } from '@mui/material';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport InputMask from 'react-input-mask';\r\nimport styles from './PhoneInput.module.css';\r\n\r\nexport const PhoneInput = () => {\r\n    const { register, formState: { errors } } = useFormContext();\r\n    return (\r\n        <div className={styles.main_block}>\r\n            <InputMask mask=\"(\\+\\9\\9\\3) 99999999\" {...register('phone', {required: true})} disabled={false} >\r\n                {() => <TextField className={styles.input} name='phone'  label='Телефон' />}\r\n            </InputMask>\r\n            {errors.phone?.type === 'required' && <Alert severity=\"error\">Телефон обязателен</Alert>}\r\n        </div>\r\n    );\r\n};","import { Alert, FormControl, IconButton, InputAdornment, InputLabel, OutlinedInput } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport * as yup from 'yup';\r\n// Images\r\nimport eye from '../../../Images/eye.png';\r\nimport lock from '../../../Images/lock.png';\r\n//Styles\r\nimport styles from './PasswordInput.module.css';\r\n\r\n\r\nexport const PasswordInput = () => {\r\n\r\n    // Local state\r\n    const [showPassword, setShowPassword] = React.useState<any>(false);\r\n\r\n    // Global state\r\n    const { register, formState: { errors }} = useFormContext();\r\n\r\n    const handleClickShowPassword = () => { \r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.main_block}>\r\n            <FormControl className={styles.input} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n                <OutlinedInput\r\n                    {...register('password', {pattern: /^[a-zA-Z0-9]+$/, required: true, minLength: 8})}\r\n                    id=\"outlined-adornment-password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton edge='end' onClick={handleClickShowPassword} >\r\n                                {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                    label=\"Password\"\r\n                />\r\n            </FormControl>\r\n        {errors.password?.type === 'required' && <Alert severity=\"error\">Пароль обязателен</Alert>}\r\n        {errors.password?.type ==='pattern' && <Alert severity=\"error\">\r\n            Пароль должен состоять из букв и хотя бы одной цифры\r\n        </Alert>}\r\n        {errors.password?.type === 'minLength' && <Alert severity=\"error\">Пароль не должен быть меньше 8 символов</Alert>}\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n};\r\n\r\n","import { InferActionsTypes } from \"../../store\";\r\n\r\n\r\n// Store\r\nconst AnalyticsState = {\r\n    analyticsData: null,\r\n    shortenedTypes: null,\r\n};\r\n\r\n\r\n// Types\r\nexport type AnalyticsData = {id: number; count: string; absolute_name: string};\r\nexport type ShortenedTypes = {id: number; name: string};\r\n\r\n// Actions\r\nexport const AnalyticsActions = {\r\n    addAnalyticsData: (analyticsData: AnalyticsData[]) => ({ type: 'ADD_ANALYTICS_DATA', analyticsData } as const),\r\n    addShortenedTypes: (shortenedTypes: ShortenedTypes[]) => ({type: 'ADD_SHORTENED_TYPES', shortenedTypes} as const)\r\n};\r\n\r\n\r\nexport const AnalyticsReducer = (state = AnalyticsState, action: AnalyticsActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD_ANALYTICS_DATA':\r\n            return {\r\n                ...state,\r\n                analyticsData: action.analyticsData\r\n            }\r\n        case 'ADD_SHORTENED_TYPES':\r\n            return {\r\n                ...state,\r\n                shortenedTypes: action.shortenedTypes\r\n            }\r\n        default: return state;\r\n    }\r\n};\r\n\r\n\r\nexport type AnalyticsStateType = typeof AnalyticsState;\r\nexport type AnalyticsActionsType = InferActionsTypes<typeof AnalyticsActions>;","import { InferActionsTypes } from '../../store';\r\n\r\n\r\n// Store\r\nconst LocatiosState = {\r\n    mainLocations: [],\r\n    regionLocations: []\r\n};\r\n\r\n\r\nexport type LocationsStateType = typeof LocatiosState;\r\nexport type LocationActionsType = InferActionsTypes<typeof LocationsActions>;\r\n\r\n\r\n// Actions\r\nexport const LocationsActions = {\r\n    addMainLocations: (mainLocations: LocationsType[]) => ({ type: 'ADD_MAIN_LOCATION', mainLocations } as const),\r\n    addNewRegionLocations: (regionLocations: LocationsType) => ({ type: 'ADD_NEW_REGION_LOCATION', regionLocations } as const),\r\n    addNewMainLocations: (mainLocations: LocationsType) => ({ type: 'ADD_NEW_MAIN_LOCATION', mainLocations } as const),\r\n    addRegionLocations: (id: number, regionLocations: LocationsType[]) => ({ type: 'ADD_REGION_LOCATION', data: { id, regionLocations } } as const),\r\n};\r\n\r\n\r\n// Reducer\r\nexport const LocationsReducer = (state = LocatiosState, action: LocationActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD_MAIN_LOCATION':\r\n            return {\r\n                ...state,\r\n                mainLocations: action.mainLocations\r\n            };\r\n        case 'ADD_REGION_LOCATION':\r\n            return {\r\n                ...state,\r\n                regionLocations: action.data.regionLocations\r\n            };\r\n        case 'ADD_NEW_REGION_LOCATION':\r\n            return {\r\n                ...state,\r\n                regionLocations: [...state.regionLocations, action.regionLocations]\r\n            }\r\n        case 'ADD_NEW_MAIN_LOCATION':\r\n            return {\r\n                ...state,\r\n                mainLocations: [...state.mainLocations, action.mainLocations]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Types\r\ntype LocationsType = {\r\n    id: number;\r\n    name: string\r\n}","import { InferActionsTypes } from '../../store';\r\n\r\n\r\n// Store\r\nconst OperatorsInitialState = {\r\n    operators: [],\r\n    operatorsCount: null,\r\n    searchedOperators: null,\r\n    isLoading: false\r\n};\r\n\r\n\r\n// Actions\r\nexport const OperatorsActions =  {\r\n    changeIsLoading: (bool: boolean) => ({type: 'CHANGE_IS_LOADING', bool} as const),\r\n    addOperators: (operators: OperatorDataType) => ({type: 'ADD_OPERATORS', operators} as const),\r\n    addSerchedOperators: (operators: Array<OperatorDataType>) => ({type: 'ADD_SEARCHED_OPERATORS', operators} as const),\r\n    changeOperatorsCound: (count: number) => ({type: 'CHANGE_OPERATORS_COUNT', count} as const),\r\n    makeSearchOperatorsNull: () => ({type: 'MAKE_SEARCH_OPERATORS_NULL'} as const),\r\n    deleteOperator: (id: number) => ({type: 'DELETE_OPERATOR', id} as const),\r\n    createOperator: (operator: OperatorDataType) => ({type: 'CREATE_OPERATOR', operator} as const) \r\n};\r\n\r\n\r\n// Reducer\r\nexport const OperatorsReducer = (state = OperatorsInitialState, action: OperatorsActionsType ) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.bool\r\n            };\r\n        case 'ADD_OPERATORS':\r\n            return {\r\n                ...state,\r\n                operators: action.operators\r\n            };\r\n        case 'DELETE_OPERATOR':\r\n            return {\r\n                ...state,\r\n                operators: state.operators.filter((operator: OperatorDataType) => Number(operator.id) !== Number(action.id)) \r\n            };\r\n        case 'CHANGE_OPERATORS_COUNT':\r\n            return {\r\n                ...state,\r\n                operatorsCount: action.count\r\n            };\r\n        case 'ADD_SEARCHED_OPERATORS':\r\n            return {\r\n                ...state,\r\n                searchedOperators: action.operators\r\n            };\r\n        case 'MAKE_SEARCH_OPERATORS_NULL':\r\n            return {\r\n                ...state,\r\n                searchedOperators: null\r\n            };\r\n        case 'CREATE_OPERATOR':\r\n                return {\r\n                    ...state,\r\n                    operators: [...state.operators, action.operator]\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Types\r\nexport type OperatorDataType = {\r\n    full_name: string;\r\n    email: string;\r\n    phone: string;\r\n    id: string;\r\n};\r\n\r\nexport type OperatorsInitialStateType = typeof OperatorsInitialState;\r\n\r\nexport type OperatorsActionsType = InferActionsTypes<typeof OperatorsActions>;","import { InferActionsTypes } from '../../store';\r\n\r\n\r\n// Actions\r\nexport const ImagesActions =  {\r\n    addImagesLocations: (imagesLocations: Array<{id: number; place: string}>) => ({type: 'ADD_IMAGES_LOCATIONS', imagesLocations} as const),\r\n    addLocationImages: (locationImages: Array<LocationImagesType>) => ({type: 'ADD_LOCATION_IMAGES', locationImages} as const),\r\n    addImage: (image: {id: number; destination: string}) => ({type: 'ADD_IMAGE', image} as const),\r\n};\r\n\r\n\r\n// Reducer\r\nexport const ImagesReducer = (state = ImagesInitialState, action: ImageActionsType ) => {\r\n    switch (action.type) {\r\n        case 'ADD_IMAGES_LOCATIONS':\r\n            return {\r\n                ...state,\r\n                imagesLocations: action.imagesLocations\r\n            };\r\n        case 'ADD_LOCATION_IMAGES':\r\n            return {\r\n                ...state,\r\n                imageLocations: action.locationImages\r\n            };\r\n        case 'ADD_IMAGE':\r\n            return {\r\n                ...state,\r\n                imageLocations: [...state.imageLocations, action.image]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n\r\n// Types\r\nconst ImagesInitialState = {\r\n    imagesLocations: null,\r\n    imageLocations: null as any,\r\n};\r\n\r\nexport type LocationImagesType = {\r\n    id: number;\r\n    destination: string;\r\n}\r\n\r\nexport type ImageInitialStateType = typeof ImagesInitialState;\r\n\r\nexport type ImageActionsType = InferActionsTypes<typeof ImagesActions>;","import { InferActionsTypes } from '../../store';\r\n\r\n\r\nconst AuthInitialState = {\r\n    estates: [],\r\n    estate: [],\r\n    deleteEstate: null,\r\n};\r\n\r\n\r\nexport const UnapproveActions =  {\r\n    addEstatesData: (estates: estatesDataType) => ({type: 'ADD_ESTATES_DATA', estates} as const),\r\n    addEstateData: (estate: EstateDataType) => ({type: 'ADD_ESTATE_DATA', estate} as const),\r\n    addDeleteEstate: (id: number) => ({type: 'ADD_DELETE_ID', id} as const),\r\n};\r\n\r\n\r\nexport const UnapproveReducer = (state = AuthInitialState, actions: ActionsType ) => {\r\n    switch (actions.type) {\r\n        case 'ADD_ESTATES_DATA':\r\n            return {\r\n                ...state,\r\n                estates: actions.estates,\r\n            };\r\n        case 'ADD_ESTATE_DATA':\r\n            return {\r\n                ...state,\r\n                estate: actions.estate,\r\n            };\r\n        case 'ADD_DELETE_ID':\r\n            return {\r\n                ...state,\r\n                deleteEstate: actions.id,\r\n            };   \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Types\r\nexport type estatesDataType = {\r\n    id: number;\r\n    price: string,\r\n    location: string,\r\n    real_estate_name: string,\r\n    image: string,\r\n};\r\n\r\nexport type EstateDataType = {\r\n    area: string,\r\n    created_at: string,\r\n    description: string,\r\n    images: {destination: string}[] | null,\r\n    location: string,\r\n    owner_type: string,\r\n    phone: string,\r\n    price: string,\r\n    real_estate_name: string,\r\n    specifications: \r\n        {name: string, values: {absolute_value: string, name: null | string}[]}[];\r\n    vip: null | boolean;\r\n};\r\n\r\nexport type LoginInitialStateType = typeof AuthInitialState;\r\n\r\nexport type ActionsType = InferActionsTypes<typeof UnapproveActions>;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_block\":\"HourglassLoader_main_block__ISCxz\"};","import gearLoader from '../../../Images/gearLoader.gif';\r\nimport styles from './HourglassLoader.module.css';\r\n\r\nexport const HourglassLoader = () => {\r\n    return (\r\n        <div className={styles.main_block}>\r\n            <img src={gearLoader} alt='Loader' />\r\n        </div>\r\n    );\r\n};","export default __webpack_public_path__ + \"static/media/logo.618c6285.png\";","// Libraries\r\nimport { useState } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// Components\r\nimport {loginThunk} from '../../Redux/Auth/AuthThunks';\r\nimport { PhoneInput } from '../../Components/Inputs/PhoneInput/PhoneInput';\r\nimport { PasswordInput } from '../../Components/Inputs/PasswordInput/PasswordInput';\r\nimport { Button } from '@mui/material';\r\n// Selectors\r\nimport { GetIsLoading } from '../../Redux/Auth/AuthSelector';\r\n// Styles\r\nimport styles from './Auth.module.css';\r\n// Images\r\nimport { HourglassLoader } from '../../Components/Loader/HourglassLoader/HourglassLoader';\r\nimport logo from '../../Images/logo.png';\r\n\r\n\r\nexport default function Auth() {\r\n    const dispatch = useDispatch();\r\n\r\n    // Local store\r\n    const isLoading = useSelector(GetIsLoading);\r\n    const methods = useForm<FormDataTypes>();\r\n    const { handleSubmit, register } = methods;\r\n    // const {handleSubmit, register} = useForm();\r\n\r\n    // Functions\r\n    const onFormSubmit = (data: FormDataTypes) => {\r\n        const shortenedPhone = data.phone.substr(7);\r\n        data.phone = shortenedPhone;\r\n        dispatch(loginThunk(data));\r\n    };   \r\n\r\n    return (\r\n        <>\r\n            {isLoading ? <HourglassLoader /> : \r\n                <div className={styles.main_block}>\r\n                    <div className={styles.content_block}>\r\n                        <div className={`${styles.login_block} shadow-3xl`}>\r\n                            <h1 className={styles.login_title}> Войти в аккаунт </h1>\r\n                            <FormProvider {...methods}>\r\n                                <form className={styles.form} id='login_form' onSubmit={handleSubmit(onFormSubmit)}>\r\n                                    <PhoneInput />\r\n                                    <PasswordInput />\r\n                                    <div className={styles.button_block}>\r\n                                        <Button type='submit' className={styles.button} variant='contained'>Войти</Button>\r\n                                    </div>\r\n                                </form>\r\n                            </FormProvider>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={styles.image_section}>\r\n                        <img src={logo}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\n// Types\r\ntype FormDataTypes = {\r\n    phone: string; \r\n    password: string;\r\n}","import React, { Suspense, useEffect } from 'react';\nimport { Toaster } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { HourglassLoader } from './Components/Loader/HourglassLoader/HourglassLoader';\nimport Auth from './Pages/Auth/Auth';\nimport { GetRoleId } from './Redux/Auth/AuthSelector';\nimport { loadAdminThunk, loadOperatorThunk } from './Redux/Auth/AuthThunks';\n\nconst AdminIndex = React.lazy(() => import('./Pages/Admin/AdminIndex'));\nconst OperatorIndex = React.lazy(() => import('./Pages/Operator/OperatorIndex'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const role_id = useSelector(GetRoleId);\n  \n  useEffect(() => {\n    dispatch(loadOperatorThunk());\n    dispatch(loadAdminThunk());\n  }, [dispatch]);\n\n    return (\n      <>\n          <Suspense fallback={<div>Loading...</div>}>\n          <div className=\"App\">\n            {\n              (role_id === 1)\n              ?\n                <Switch>\n                  <Route path='/admin' component={AdminIndex}/> \n                  <Redirect to='/admin/operators'/>\n                </Switch>\n              : (role_id === 2)\n                ?\n                  <Switch>\n                    <Route path='/operator' component={OperatorIndex} />\n                    <Redirect to='/operator/unapproved'/>\n                  </Switch>\n                : (role_id === 0)\n                  ?\n                    <>\n                      <Route path='/auth' component={Auth} />\n                      <Redirect to='/auth' />\n                    </>\n                  : <div className='h-full'> <HourglassLoader /> </div>\n            }\n            <Toaster />\n          </div>\n          </Suspense>\n\n      </>\n    )\n}","import {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk, { ThunkAction } from \"redux-thunk\";\r\nimport { AnalyticsReducer } from \"./Admin/Analytics/AnalyticsReducer\";\r\n// Reducers\r\nimport { LocationsReducer } from \"./Admin/Locations/LocationsReducer\";\r\nimport { OperatorsReducer } from \"./Admin/Operators/OperatorsReducer\";\r\nimport { ImagesReducer } from \"./Admin/Pictures/ImagesReducer\";\r\nimport { SpecificationsReducer } from \"./Admin/Specifications/SpecificationsReducer\";\r\nimport { TypesReducer } from \"./Admin/Types/TypesReducer\";\r\nimport { AuthReducer } from \"./Auth/AuthReducer\";\r\nimport { UnapproveReducer } from \"./Operator/Unapproved/UnapprovedReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: AuthReducer,\r\n    unapproved: UnapproveReducer,\r\n    operators: OperatorsReducer,\r\n    specifications: SpecificationsReducer,\r\n    locations: LocationsReducer,\r\n    images: ImagesReducer,\r\n    types: TypesReducer,\r\n    analytics: AnalyticsReducer,\r\n});\r\n\r\ndeclare global {\r\n    interface Window {\r\n      __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n  }\r\n\r\n// Store type\r\nexport type StateType = ReturnType<typeof store.getState>;\r\n// Типизация thunk\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, StateType, unknown, A>;\r\n// Actions type\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\n// Add Redux-devtool\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// Create store with Thunk\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);","import { InferActionsTypes } from \"../store\";\r\n\r\n\r\nconst AuthInitialState = {\r\n    userData: {    \r\n        phone: '',\r\n        password: '',\r\n        email: '',\r\n        id: 0,\r\n        role_id: null\r\n    },\r\n    isAuth: false,\r\n    access_token: '',\r\n    isLoading: false,\r\n};\r\n\r\n\r\ntype authUserResponseDataType = {\r\n    email: string,\r\n    id: string,\r\n    phone: string,\r\n    role_id: number;\r\n}\r\n\r\nexport const AuthActions =  {\r\n    addUserData: (authUserData: authUserResponseDataType) => ({type: 'ADD_USER_DATA', authUserData} as const),\r\n    addAccessToken: (access_token: string) => ({type: 'ADD_ACCESS_TOKEN', access_token} as const),\r\n    changeIsLoading: () => ({type: 'CHANGE_IS_LOADING'} as const),\r\n    changeRoleId: (roleId: number) => ({type: 'CHANGE_ROLE_ID', roleId} as const),\r\n    logout: () => ({type: 'LOGOUT'} as const),\r\n};\r\n\r\nexport const AuthReducer = (state = AuthInitialState, action: ActionsType ) => {\r\n    switch (action.type) {\r\n        case 'ADD_USER_DATA':\r\n            return {\r\n                ...state,\r\n                userData: action.authUserData,\r\n                isAuth: true\r\n            };\r\n        case 'ADD_ACCESS_TOKEN':\r\n            return {\r\n                ...state,\r\n                access_token: action.access_token,\r\n            };\r\n        case 'CHANGE_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: !state.isLoading,\r\n            }\r\n        case 'CHANGE_ROLE_ID':\r\n            return {\r\n                ...state,\r\n                userData: {...state.userData, role_id: action.roleId}\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ...state,\r\n                userData: {    \r\n                    phone: '',\r\n                    password: '',\r\n                    email: '',\r\n                    id: 0,\r\n                    role_id: 0\r\n                },\r\n                isAuth: false,\r\n                access_token: '',\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Store type\r\nexport type LoginInitialStateType = typeof AuthInitialState;\r\n\r\n// Action types\r\nexport type ActionsType = InferActionsTypes<typeof AuthActions>;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_block\":\"Auth_main_block__GSjdr\",\"content_block\":\"Auth_content_block__1BGBo\",\"login_block\":\"Auth_login_block__dGA9W\",\"logo_block\":\"Auth_logo_block__1yqce\",\"login_title\":\"Auth_login_title__9fh4v\",\"form\":\"Auth_form__3-59v\",\"button_block\":\"Auth_button_block__AEmMU\",\"image_section\":\"Auth_image_section__W5wCf\"};","import { ThunkAction } from \"redux-thunk\";\r\nimport { api } from \"../../api\";\r\nimport { ActionsType, AuthActions, LoginInitialStateType } from \"./AuthReducer\";\r\nimport Cookies from 'js-cookie';\r\n\r\n// User login data\r\ntype userLoginData = {\r\n    phone: string,\r\n    password: string\r\n};\r\n\r\nexport const loginThunk = (data: userLoginData): ThunkAction<Promise<void>, {}, LoginInitialStateType, ActionsType> => {\r\n    return async (dispatch: any) => {\r\n        try {\r\n            dispatch(AuthActions.changeIsLoading());\r\n            debugger;\r\n            const response = await api.postApi( {url: 'admin/login', token: '', withCredentials: true, params: {phone: data.phone, password: data.password} });\r\n            debugger;\r\n            Cookies.set('refresh_token', response.data.refresh_token);\r\n            dispatch(AuthActions.addUserData(response.data.data));\r\n            dispatch(AuthActions.addAccessToken(response.data.access_token));\r\n            dispatch(AuthActions.changeIsLoading());\r\n            return response;\r\n        } catch (error: any) {\r\n            console.log(error.response.message);\r\n            dispatch(AuthActions.changeIsLoading());\r\n            return error.response;\r\n        }\r\n    };\r\n};\r\n\r\nexport const loadOperatorThunk = () => {\r\n    return async (dispatch: any) => {\r\n        const token = Cookies.get('refresh_token');\r\n        if(token){\r\n            try {\r\n                const response = await api.getApi({url:'operator/load-operator', token: token, withCredentials:true, contentType: false});\r\n                dispatch(AuthActions.changeRoleId(response.data.data.role_id));\r\n                dispatch(AuthActions.addUserData(response.data.data));\r\n                dispatch(AuthActions.addAccessToken(response.data.access_token));\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        } else {\r\n            dispatch(AuthActions.changeRoleId(0));\r\n            return\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport const loadAdminThunk = () => {\r\n    return async (dispatch: any) => {\r\n        const token = Cookies.get('refresh_token');\r\n        if(token){\r\n            try {\r\n                const response = await api.getApi({url:'admin/load-admin', token: token, withCredentials:true, contentType: false});\r\n                dispatch(AuthActions.changeRoleId(response.data.data.role_id));\r\n                dispatch(AuthActions.addUserData(response.data.data));\r\n                dispatch(AuthActions.addAccessToken(response.data.access_token));\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        } else {\r\n            dispatch(AuthActions.changeRoleId(0));\r\n            return;\r\n        }\r\n\r\n    }\r\n};","export function GetIsAuth(state) {\r\n    return state.auth.isAuth;\r\n}\r\n\r\nexport function GetAccessToken(state) {\r\n    return state.auth.access_token;\r\n}\r\n\r\nexport function GetIsLoading(state) {\r\n    return state.auth.isLoading;\r\n}\r\n\r\nexport function GetRoleId(state) {\r\n    return state.auth.userData.role_id;\r\n}","import axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: `${process.env.REACT_APP_BASE_URL}/api/`,\r\n    timeout: 10000,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n        Authorization: null\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n    response => response,\r\n    (error) => {\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 401 && error.response.data === 'Unauthorized') {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    accept: 'application/json',\r\n                    Authorization: `Bearer ${Cookies.get('refresh_token')}`,\r\n                },\r\n                withCredentials: true\r\n            }\r\n            return axiosInstance.get('/auth/token/refresh/', config)\r\n                .then((response) => {\r\n                    axiosInstance.defaults.headers.Authorization = `Bearer ${response.data.token}`;\r\n                    originalRequest.headers.Authorization = `Bearer ${response.data.token}`;\r\n                    return axiosInstance(originalRequest);\r\n                }).catch((err) => {\r\n                    axiosInstance.defaults.headers.Authorization = null;\r\n                    originalRequest.headers.Authorization = null;\r\n                    return Promise.reject(error);\r\n                });\r\n        } else {\r\n            axiosInstance.defaults.headers.Authorization = null;\r\n            originalRequest.headers.Authorization = null;\r\n            return Promise.reject(error);\r\n        }\r\n    }\r\n);\r\n\r\nexport const api = {\r\n    getApi: async ({ url, token, withCredentials, contentType }) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': contentType ? contentType : 'application/json',\r\n                accept: 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            timeout: contentType ? 100000 : 20000,\r\n            withCredentials\r\n        }\r\n        const response = await axiosInstance.get(`${url}`, config);\r\n        return response;\r\n    },\r\n    postApi: async ({ url, token, withCredentials, params }) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                accept: 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n            withCredentials\r\n        }\r\n        const response = await axiosInstance.post(`${url}`, params, config);\r\n        return response;\r\n    },\r\n    uploadPhoto: async ({ url, token, withCredentials, formData }) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n                Authorization: `Bearer ${token}`\r\n            },\r\n            timeout: 50000,\r\n            withCredentials: withCredentials,\r\n        };\r\n        const response = await axiosInstance.post(`${url}`, formData, config);\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default axiosInstance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_block\":\"PhoneInput_main_block__1hQXW\",\"input\":\"PhoneInput_input__3pvw4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_block\":\"PasswordInput_main_block__1H8OW\",\"input\":\"PasswordInput_input__2Cf6q\"};","import { InferActionsTypes } from '../../store';\r\n\r\n\r\nconst TypesInitialState = {\r\n    types: null,\r\n    type: null  as unknown as TypeType,\r\n    active_type_specifications: null as unknown as Array<TypeSpecificationType>,\r\n    deleted_type_specifications: null as unknown as Array<TypeSpecificationType>,\r\n    unusedSpecs: null as unknown as Array<UnusedSpecType>,\r\n    wannaUseSpecs: [] as unknown as Array<UnusedSpecType>,\r\n};\r\n\r\n\r\n\r\n\r\nexport const TypesActions =  {\r\n    addTypes: (types: TypesType) => ({type: 'ADD_TYPES', types} as const),\r\n    addType: (typeData: TypeType) => ({type: 'ADD_TYPE', typeData} as const),\r\n    changeDeleted: (boolValue: boolean, id: number) => ({type: 'CHANGE_DELETED_VALUE', data: {id, boolValue}} as const),\r\n    switchTrueToFalseSpecification: (value: any) => ({type: 'SWITCH_TRUE_TO_FALSE_SPECIFICATION', value} as const),\r\n    switchFalseToTrueSpecification: (value: any) => ({type: 'SWITCH_FALSE_TO_TRUE_SPECIFICATION', value} as const),\r\n    addUnusedSpecToType: (unusedSpecs: Array<UnusedSpecType>) => ({type: 'ADD_UNUSED_SPEC', unusedSpecs} as const),\r\n    addCreatedSpecToUnused: (createdSpec: UnusedSpecType) => ({type: 'ADD_CREATED_SPEC_TO_UNUSED', createdSpec} as const),\r\n    changeUnusedToWannaUse: (spec: UnusedSpecType) => ({type: 'CHAGE_UNUSED_SPEC_TO_WANNA_USE', spec} as const),\r\n    changeWannaUseToUnused: (spec: UnusedSpecType) => ({type: 'CHAGE_WANNA_USE_TO_UNUSED_USE', spec} as const),\r\n    clearWannaUseSpecs: () => ({type: 'CLEAR_WANNA_USE_SPECS'} as const)\r\n};\r\n\r\n\r\nexport const TypesReducer = (state = TypesInitialState, action: TypeActionsType) => {\r\n    switch (action.type) {\r\n        case 'ADD_TYPES':\r\n            return {\r\n                ...state,\r\n                types: action.types,\r\n            };\r\n        case 'ADD_TYPE':\r\n            return {\r\n                ...state,\r\n                type: action.typeData,\r\n                active_type_specifications: action.typeData.active_type_specifications,\r\n                deleted_type_specifications: action.typeData.deleted_type_specifications,\r\n            };\r\n        case 'SWITCH_TRUE_TO_FALSE_SPECIFICATION':\r\n            return {\r\n                ...state,\r\n                active_type_specifications: state.active_type_specifications.filter((value: TypeSpecificationType) => value.type_spec_id !== action.value.type_spec_id),\r\n                deleted_type_specifications: [...state.deleted_type_specifications, action.value]\r\n            };\r\n        case 'SWITCH_FALSE_TO_TRUE_SPECIFICATION':\r\n            return {\r\n                ...state,\r\n                deleted_type_specifications: state.deleted_type_specifications.filter((value: TypeSpecificationType) => value.type_spec_id !== action.value.type_spec_id),\r\n                active_type_specifications: [...state.active_type_specifications, action.value]\r\n            };\r\n        case 'ADD_UNUSED_SPEC':\r\n            return {\r\n                ...state,\r\n                unusedSpecs: action.unusedSpecs\r\n            };\r\n        case 'CHAGE_UNUSED_SPEC_TO_WANNA_USE':\r\n            return {\r\n                ...state,\r\n                unusedSpecs: state.unusedSpecs.filter((unusedSpec: UnusedSpecType) => unusedSpec.spec_id !== action.spec.spec_id),\r\n                wannaUseSpecs: [...state.wannaUseSpecs, Object.assign(action.spec, {position: null})]\r\n            };\r\n        case 'CHAGE_WANNA_USE_TO_UNUSED_USE':\r\n            return {\r\n                ...state,\r\n                wannaUseSpecs: state.wannaUseSpecs.filter((wannaUseSpec: UnusedSpecType) => wannaUseSpec.spec_id !== action.spec.spec_id),\r\n                unusedSpecs: [...state.unusedSpecs, action.spec]\r\n            };\r\n        case 'ADD_CREATED_SPEC_TO_UNUSED':\r\n            return {\r\n                ...state,\r\n                unusedSpecs: [...state.unusedSpecs, action.createdSpec]\r\n            };\r\n        case 'CLEAR_WANNA_USE_SPECS':\r\n            return {\r\n                ...state,\r\n                wannaUseSpecs: []\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Types\r\nexport type TypesType = {\r\n    id: number;\r\n    main_type: string;\r\n    absolute_name: string;\r\n    destination: null | string;\r\n    translations: Array<TranslationType>;\r\n    name: string;\r\n};\r\n\r\nexport type TypeType = {\r\n    absolute_name: string;\r\n    destination: null;\r\n    translations: Array<{\r\n        name: string;\r\n        language_id: number;\r\n    }>;\r\n    active_type_specifications: null | Array<TypeSpecificationType>;\r\n    deleted_type_specifications: null | Array<TypeSpecificationType>;\r\n};\r\n\r\nexport type TypeSpecificationType = {\r\n    id: number;\r\n    absolute_name: string;\r\n    deleted: boolean;\r\n    type_spec_id: number;\r\n    queue_position: number;\r\n    spec_translations: Array<TranslationType>\r\n};\r\n\r\nexport type TranslationType = {\r\n    language_id: number;\r\n    name: string;\r\n};\r\n\r\nexport type UnusedSpecType = {\r\n    spec_id: number;\r\n    absolute_name: string;\r\n    spec_translations: TranslationType[];\r\n}\r\n\r\n// Store type\r\nexport type TypesInitialStateType = typeof TypesInitialState;\r\n\r\n// Action types\r\nexport type TypeActionsType = InferActionsTypes<typeof TypesActions>;"],"sourceRoot":""}